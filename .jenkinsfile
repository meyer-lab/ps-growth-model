pipeline {
  agent { label 'docker' }
  stages {
    stage('Clean') { steps { sh 'make clean && git submodule update --init --recursive' } }
    stage('Build') {
      steps {
        sh 'make venv'
        lock ('manubot') {
          sh 'make output/manuscript.md'
        }
        sh 'make all -j 6'
      }
    }
    stage('Report') {
      steps {
        recordIssues qualityGates: [[threshold: 25, type: 'TOTAL', unstable: true]], tools: [pyLint(pattern: 'pylint.log')]
        junit allowEmptyResults: false, testResults: 'junit.xml'
        cobertura coberturaReportFile: 'coverage.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
        archiveArtifacts artifacts: 'output/*.pdf, output/*.svg, output/*.docx', onlyIfSuccessful: true
      }
    }
  }
  post {
    always {
      cleanWs cleanWhenFailure: false, cleanWhenNotBuilt: false, cleanWhenUnstable: false
    }
  }
}
